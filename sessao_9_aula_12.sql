-- FUNÇÕES DE CONVERSÃO E FUNÇÕES CONDICIONAIS

-- UTILIZANDO A FUNÇÃO TO_CHAR COM DATAS
    
SELECT LAST_NAME, TO_CHAR(HIRE_DATE, 'DD/MM/YYYY HH24:MI:SS') DT_ADMISSÃO
FROM EMPLOYEES;

SELECT SYSDATE, TO_CHAR(SYSDATE, 'DD/MM/YYYY HH24:MI:SS') DATA_ATUAL
FROM DUAL;

SELECT LAST_NAME, TO_CHAR(HIRE_DATE, 'DD "de" Month "de" YYYY') DATA_ADMISSÃO
FROM EMPLOYEES;

-- FM => ELIMINA ZEROS A ESQUERDA E ESPAÇOS DESNECESSÁRIOS
SELECT LAST_NAME, TO_CHAR(HIRE_DATE, 'DD "de" Month "de" YYYY') DATA_ADMISSÃO,
TO_CHAR(HIRE_DATE, 'FMDD "de" Month "de" YYYY') DATA_ADMISSÃO2
FROM EMPLOYEES;


-- UTILIZANDO A FUNÇÃO TO_CHAR COM NÚMEROS

SELECT FIRST_NAME, LAST_NAME, TO_CHAR(SALARY, 'L99G999G999D99') SALÁRIO
FROM EMPLOYEES;
--WHERE LAST_NAME = 'King';


-- UTILIZANDO A FUNÇÃO TO_NUMBER (CARACTER PARA NÚMERO)

SELECT TO_NUMBER('2000,50') FROM DUAL;


-- UTILIZANDO A FUNÇÃO TO_DATE

SELECT TO_DATE('06/02/2020', 'DD/MM/YYYY') DATA
FROM DUAL; -- => 06/02/20 ??

SELECT FIRST_NAME, LAST_NAME, HIRE_DATE, TO_CHAR(HIRE_DATE, 'FMDD "de" Month "de" YYYY') ADMISSÃO
FROM EMPLOYEES
WHERE HIRE_DATE = TO_DATE('17/06/2003', 'DD/MM/YYYY');


-- UTILIZANDO FUNÇÕES ANINHADAS

SELECT FIRST_NAME, LAST_NAME, MONTHS_BETWEEN(SYSDATE, HIRE_DATE),
       ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE),0) NUMEROS_MESE
FROM EMPLOYEES
WHERE HIRE_DATE = TO_DATE('17/06/2003', 'DD/MM/YYYY');


-- UTILIZANDO A FUNÇÃO NVL (SE O CAMPO FOR NULL SUBSTITUI O NULL PELO SEGUNDO ARG)

SELECT LAST_NAME, SALARY, NVL(COMMISSION_PCT,0) PERCENTUAL_COMISSAO, TO_CHAR(SALARY*12, 'L99G999G999D99') SALARIO_ANUAL,
TO_CHAR((SALARY*12) + (SALARY*12*NVL(COMMISSION_PCT,0)), 'L99G999G999D99') REMUNERACAO_ANUAL
FROM EMPLOYEES;

-- FUNÇÃO COALSECE => EXIBI O PRIMEIRO VALOR DE UMA LISTA DE VALORES QUE FORM DIFERENTE DE NULL

SELECT COALESCE(NULL, NULL, 'EXPRESSÃO 3') V1, 
       COALESCE(NULL, 'EXPRESSÃO 2', 'EXPRESSÃO 3') V2,
       COALESCE('EXPRESSÃO 1', 'EXPRESSÃO 2', 'EXPRESSÃO 3') V3
FROM DUAL;

SELECT LAST_NAME, EMPLOYEE_ID, COMMISSION_PCT, MANAGER_ID,
    COALESCE(TO_CHAR(COMMISSION_PCT), TO_CHAR(MANAGER_ID), 'SEM PERCENTUAL DE COMMISSÃO E SEM GERENTE')
FROM EMPLOYEES;

-- NVL2 => RECEBE 3 PARAMETROS, SE O PRIMEIRO FOR NULL ELE USA O TERCEIRO ARGUMENTO,
-- CASO NÃO SEJA USAR O SEGUNDO ARGUMENTO

SELECT LAST_NAME, SALARY, COMMISSION_PCT,
    NVL2(COMMISSION_PCT, 10, 1) PERCENTUAL
FROM EMPLOYEES;


-- NULLIF => RECEBE DOIS ARGUMENTO SE ELES FOREM IGUAIS RETORNA NULL
-- SE FOREM DIFERENTES RETORNA O PRIMEIRO ARGUMENTO

SELECT NULLIF(1000, 1000), NULLIF(1000,2000)
FROM DUAL;

SELECT FIRST_NAME, LAST_NAME, LENGTH(FIRST_NAME) "EXPRESSÃO 1",
    LENGTH(LAST_NAME) "EXPRESSÃO 2", NULLIF(LENGTH(FIRST_NAME), LENGTH(LAST_NAME)) RESULTADO
FROM EMPLOYEES;

-- EXPRESSÕES CONDICIONAIS: CASE E DECODE

-- CASE
SELECT LAST_NAME, JOB_ID, SALARY,
    CASE JOB_ID
        WHEN 'IT_PROG'
            THEN 1.10 * SALARY
        WHEN 'ST_CLERK'
            THEN 1.15 * SALARY
        WHEN 'SA_REP'
            THEN 1.20 * SALARY
        ELSE SALARY
    END "NOVO SALÁRIO"
FROM EMPLOYEES;

-- DECODE

SELECT LAST_NAME, JOB_ID, SALARY,
    DECODE(JOB_ID, 'IT_PROG', 1.10 * SALARY,
                   'ST_CLERK', 1.15 * SALARY,
                   'SA_REP', 1.20 * SALARY, 
                   SALARY) "NOVO SALÁRIO"
FROM EMPLOYEES;

